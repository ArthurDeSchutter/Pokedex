{"version":3,"sources":["components/Header.js","components/PokemonCard.js","components/Battle.js","components/BattleZone.js","components/Pokedex.js","App.js","reportWebVitals.js","index.js"],"names":["styles","header","backgroundColor","display","margin","headerTitle","color","Header","style","Canvas","borderColor","padding","boxShadow","minWidth","flexDirection","justifyContent","alignItems","borderRadius","font","paddingTop","textAllign","PokemonCard","props","useState","pokemon","setpokemon","name","console","log","useEffect","fetch","then","response","json","data","undefined","targetKey","dragData","src","sprites","front_default","alt","stats","stat","base_stat","types","type","Battle","poke1","poke2","a","getAttacks","url","pokemon1","hp","attacks","pokemon2","rndattack","getRandomInt","length","attack","affecting_moves","decrease","recievingpokemon","change","max","Math","floor","random","dragDiv","height","width","border","BattleZone","setpokemon2","winner","setwinner","flipped","set","useSpring","opacity","transform","config","mass","tension","friction","getBattleOutcome","alert","state","resetBattle","div","hidden","interpolate","o","onHit","DropTarget","Button","onClick","variant","t","wrapper","flexWrap","maxWidth","Pokedex","pokemondata","setpokemondata","trail","useTrail","from","x","to","map","i","otherProps","className","BattleZoneStyle","PokedexStyle","App","document","body","zIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.11c93bb2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div style={styles.header}>\r\n      <h1 style={styles.headerTitle}> Pokedex</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  header: {\r\n    backgroundColor: \"#003a70\",\r\n    display: \"absolute\",\r\n    margin: \"20\"\r\n  },\r\n  headerTitle: {\r\n    color: \"#ffcb05\",\r\n    display: \"absolute\",\r\n    margin: \"0\"\r\n  },\r\n\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { DragDropContainer } from 'react-drag-drop-container';\r\n\r\n\r\nconst PokemonCard = (props) => {\r\n  const [pokemon, setpokemon] = useState();\r\n  let { name } = props.pokemon;\r\n  console.log(\"card rendered\");\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(`/getpokemon/${name}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setpokemon(data));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {pokemon !== undefined && (\r\n        <DragDropContainer targetKey=\"foo\" dragData={pokemon}  >\r\n        <div style={styles.Canvas}\r\n        /*\r\n        onMouseEnter={mouseEnter}\r\n        onMouseLeave={mouseLeave}\r\n        */\r\n        >\r\n          <img style={styles.font} src={pokemon.sprites.front_default} alt={'sprite'}></img>\r\n          <h5 style={styles.font}>{pokemon.name}</h5>\r\n          <p style={styles.font}>\r\n            {pokemon.stats[0].stat.name}: {pokemon.stats[0].base_stat}\r\n          </p>\r\n          <p style={styles.font}>type: {pokemon.types[0].type.name}</p>\r\n        </div>\r\n        </DragDropContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nconst styles = {\r\n  Canvas: {\r\n    borderColor: \"#272121\",\r\n    backgroundColor: \"#003a70\",\r\n    margin: \"6px\",\r\n    padding: \"7px\",\r\n    boxShadow: \"3px 3px 4px #ffcb05\",\r\n    minWidth: \"225px\",\r\n    display:'flex',\r\n    flexDirection: \"column\",\r\n    justifyContent: 'center',\r\n    alignItems: \"center\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  font: {\r\n    borderRadius: \"5px\",\r\n    minWidth: \"80%\",\r\n    padding: \"2px\",\r\n    paddingTop: '2px',\r\n    backgroundColor: \"#3d7dca\",\r\n    color: \"\t#ffcb05\",\r\n    margin: \"5px\",\r\n    textAllign: \"left\",\r\n  },\r\n};\r\n\r\nexport default PokemonCard;\r\n","\r\nconst Battle = async(poke1, poke2) => {\r\n    let pokemon1 = {\r\n        name: poke1.name,\r\n        hp: poke1.stats[0].base_stat,\r\n        attacks: await getAttacks(poke1.stats[1].stat.url)\r\n    }\r\n    let pokemon2 = {\r\n        name: poke2.name,\r\n        hp: poke2.stats[0].base_stat,\r\n        attacks: await getAttacks(poke2.stats[1].stat.url)\r\n    }\r\n\r\n    while (true) {\r\n        //pokemon 1 attacks pokemon 2\r\n        let rndattack = getRandomInt(pokemon1.attacks.length)\r\n        pokemon2.hp = attack(pokemon1.attacks[rndattack], pokemon2)\r\n        if (pokemon2.hp < 1) {\r\n            //return winner\r\n            console.log(pokemon1.name)\r\n            return poke1\r\n        }\r\n        //pokemon 1 attacks pokemon 2\r\n        rndattack = getRandomInt(pokemon2.attacks.length)\r\n        pokemon1.hp = attack(pokemon2.attacks[rndattack], pokemon1)\r\n        if (pokemon1.hp < 1) {\r\n            //return winner\r\n            console.log(pokemon2)\r\n            return poke2\r\n        }\r\n        \r\n    }\r\n};\r\n\r\nconst getAttacks = async(url) => {\r\n    const response = await fetch(url);\r\n    let json = await response.json()\r\n\r\n    //get moves that decrease healt aka attacks and return those\r\n    return json.affecting_moves.decrease\r\n}\r\n\r\nconst attack = (attack, recievingpokemon) => {\r\n    //attacks always have a value of -1 or -2 so you wannt to add up a negative number \r\n    return recievingpokemon.hp + attack.change\r\n}\r\n\r\nfunction getRandomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n  }\r\nexport default Battle;\r\n","import React, { useState } from \"react\";\r\nimport { DropTarget } from \"react-drag-drop-container\";\r\nimport PokemonCard from \"./PokemonCard\";\r\nimport Battle from \"./Battle\";\r\n\r\nimport { useSpring, animated as a } from \"react-spring\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst BattleZone = () => {\r\n  const [pokemon, setpokemon] = useState();\r\n  const [pokemon2, setpokemon2] = useState();\r\n  const [winner, setwinner] = useState();\r\n  const [flipped, set] = useState(false);\r\n\r\n  //flip animation\r\n  const { transform, opacity } = useSpring({\r\n    opacity: flipped ? 1 : 0,\r\n    transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\r\n    config: { mass: 5, tension: 500, friction: 80 },\r\n  });\r\n\r\n  //calculate the winner by selecting a random attack 1 by 1 and return the winner\r\n  const getBattleOutcome = async () => {\r\n    //check if poke 1 and 2 are the same or undefined\r\n    if (pokemon === pokemon2) {\r\n      alert(\"please select 2 different pokemon\");\r\n    }\r\n    //2 pokemon selected they can fight now\r\n    else if (pokemon && pokemon2 !== undefined) {\r\n      let winner = await Battle(pokemon, pokemon2);\r\n      console.log(winner);\r\n      setwinner(winner);\r\n      set((state) => !state);\r\n    }\r\n    //1 of the pokemon is undefined\r\n    else {\r\n      alert(\"please select another pokemon\");\r\n    }\r\n  };\r\n\r\n  //reset the dragtargets\r\n  const resetBattle = async () => {\r\n    console.log(\"game reset\");\r\n    setwinner(undefined);\r\n    setpokemon(undefined);\r\n    setpokemon2(undefined);\r\n\r\n    set(false);\r\n  };\r\n\r\n  //set the state with a pokemon object\r\n  //so it will render when a pokemon is dropped in the droptarget\r\n  const renderPokemon = (DropTarget) => {\r\n    setpokemon(DropTarget.dragData);\r\n  };\r\n  const renderPokemon2 = (DropTarget) => {\r\n    console.log(DropTarget.dragData);\r\n    setpokemon2(DropTarget.dragData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"10px\" }}>\r\n        <a.div\r\n          hidden={flipped}\r\n          style={\r\n            (styles.Canvas,\r\n            { opacity: opacity.interpolate((o) => 1 - o), transform })\r\n          }\r\n        >\r\n          <div style={styles.Canvas}>\r\n            <h1 style={styles.header}> Battle</h1>\r\n            <div style={{ display: \"flex\" }}>\r\n              <DropTarget targetKey=\"foo\" onHit={renderPokemon}>\r\n                {pokemon !== undefined ? (\r\n                  <PokemonCard pokemon={pokemon} />\r\n                ) : (\r\n                  <div style={styles.dragDiv}>\r\n                    <h6 style={styles.header}>Drop something in me</h6>\r\n                  </div>\r\n                )}\r\n              </DropTarget>\r\n              <h2 style={styles.header}>V.S.</h2>\r\n              <DropTarget targetKey=\"foo\" onHit={renderPokemon2}>\r\n                {pokemon2 !== undefined ? (\r\n                  <PokemonCard pokemon={pokemon2} />\r\n                ) : (\r\n                  <div style={styles.dragDiv}>\r\n                    <h6 style={styles.header}>Drop something in me</h6>\r\n                  </div>\r\n                )}\r\n              </DropTarget>\r\n            </div>\r\n            <Button\r\n              onClick={getBattleOutcome}\r\n              variant=\"danger\"\r\n              style={{ margin: \"5px\" }}\r\n            >\r\n              Battle!\r\n            </Button>\r\n            <Button onClick={resetBattle} variant=\"success\">\r\n              reset\r\n            </Button>\r\n          </div>\r\n        </a.div>\r\n\r\n        <a.div\r\n          hidden={!flipped}\r\n          style={\r\n            (styles.Canvas,\r\n            {\r\n              opacity,\r\n              transform: transform.interpolate((t) => `${t} rotateX(180deg)`),\r\n            })\r\n          }\r\n        >\r\n          {winner !== undefined && (\r\n            <>\r\n              <div style={styles.Canvas}>\r\n                <h1 style={styles.header}> Winner!</h1>\r\n                <PokemonCard pokemon={winner} />\r\n                <Button\r\n                  onClick={resetBattle}\r\n                  variant=\"success\"\r\n                  style={{ margin: \"5px\" }}\r\n                >\r\n                  reset\r\n                </Button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </a.div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  header: {\r\n    color: \"#ffcb05\",\r\n    padding:'5px'\r\n  },\r\n  headerTitle: {\r\n    color: \"#387c6d\",\r\n    display: \"absolute\",\r\n    margin: \"0\",\r\n  },\r\n  dragDiv: {\r\n    color: \"#387c6d\",\r\n    height: \"200px\",\r\n    width: \"200px\",\r\n    backgroundColor: \"#003a70\",\r\n    borderRadius: \"10px\",\r\n    alignItems: \"center\",\r\n    textAllign: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  Canvas: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: \"10px\",\r\n    border: `5px solid #003a70`,\r\n    margin: \"5px\",\r\n  },\r\n};\r\n\r\nexport default BattleZone;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PokemonCard from \"./PokemonCard\";\r\nimport { useTrail, config, animated } from \"react-spring\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Pokedex = () => {\r\n  const [pokemondata, setpokemondata] = useState();\r\n\r\n  //adjust the first argumetn of useTrail to edit the amount\r\n  //of pokemon loadded\r\n  const trail = useTrail(20, {\r\n    config,\r\n    from: { opacity: 0, x: 20 },\r\n    to: { opacity:  1 , x:   20  },\r\n  });\r\n  \r\n  useEffect(() => {\r\n    fetch(\"/getpokemon\")\r\n      .then((response) => response.json())\r\n      .then((data) => setpokemondata(data))\r\n      .then((data) => console.log(data));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {pokemondata !== undefined && (\r\n        <div style={styles.wrapper}>\r\n          {trail.map(({ x, ...otherProps }, i) => (\r\n            <animated.div\r\n              key={pokemondata[i]}\r\n              style={{\r\n                ...otherProps,\r\n                transform: x.interpolate((x) => `translate3d(${x}px, 0, 0)`),\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n              className=\"trails-text\"\r\n            >\r\n              <PokemonCard pokemon={pokemondata[i]} />\r\n            </animated.div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  wrapper: { \r\n      display: \"flex\", \r\n      flexWrap: \"wrap\", \r\n      maxWidth: \"50%\" \r\n    },\r\n};\r\n\r\nexport default Pokedex;\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport BattleZone from \"./components/BattleZone\";\nimport Pokedex from \"./components/Pokedex\";\n\n\n//https://color-hex.org/color-palettes/137\nfunction App() {\n  document.body.style.backgroundColor = \"\t#3d7dca\";\n  return (\n    <div>\n      <Header></Header>\n      <div style={styles.PokedexStyle}>\n        <Pokedex />\n        <div style={styles.BattleZoneStyle}>\n          <BattleZone style={{ zIndex: \"1\" }} />\n        </div>\n      </div>\n    </div>\n  );\n}\nconst styles = {\n  BattleZoneStyle: {\n    width: \"50%\",\n    flexWrap: \"wrap\",\n  },\n  PokedexStyle: {\n    display: \"flex\" \n  },\n\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}